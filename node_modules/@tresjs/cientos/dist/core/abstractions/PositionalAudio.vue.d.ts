import { PositionalAudio } from 'three';
export interface PositionalAudioProps {
    ready: boolean;
    url: string;
    distance?: number;
    helper?: boolean;
    loop?: boolean;
    autoplay?: boolean;
    innerAngle?: number;
    outerAngle?: number;
    outerGain?: number;
}
declare const _default: import('vue').DefineComponent<PositionalAudioProps, {
    instance: import('vue').ShallowRef<PositionalAudio | null, PositionalAudio | null>;
    play: () => void;
    stop: () => void;
    pause: () => void;
    dispose: () => void;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    isPlaying: (...args: any[]) => void;
}, string, import('vue').PublicProps, Readonly<PositionalAudioProps> & Readonly<{
    onIsPlaying?: ((...args: any[]) => any) | undefined;
}>, {
    loop: boolean;
    distance: number;
    autoplay: boolean;
    ready: boolean;
    helper: boolean;
    innerAngle: number;
    outerAngle: number;
    outerGain: number;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {
    positionalAudioRef: import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('@tresjs/core').Mutable<import('@tresjs/core').Overwrite<Partial<import('@tresjs/core').Overwrite<PositionalAudio, import('@tresjs/core').WithMathProps<PositionalAudio> & import('@tresjs/core').VueProps & Partial<import('@tresjs/core/dist/src/utils/pointerEvents.js').PointerEventHandlers>>>, Omit<import('@tresjs/core').InstanceProps<PositionalAudio, typeof PositionalAudio>, "object">>>>, {}, {}, import('vue').ComputedOptions, import('vue').MethodOptions, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {}, true, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, any, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('@tresjs/core').Mutable<import('@tresjs/core').Overwrite<Partial<import('@tresjs/core').Overwrite<PositionalAudio, import('@tresjs/core').WithMathProps<PositionalAudio> & import('@tresjs/core').VueProps & Partial<import('@tresjs/core/dist/src/utils/pointerEvents.js').PointerEventHandlers>>>, Omit<import('@tresjs/core').InstanceProps<PositionalAudio, typeof PositionalAudio>, "object">>>>, {}, {}, import('vue').ComputedOptions, import('vue').MethodOptions, {}> | null;
}, any>;
export default _default;
