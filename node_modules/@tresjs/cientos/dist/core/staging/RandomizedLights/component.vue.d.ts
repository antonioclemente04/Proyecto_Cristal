import { VectorFlexibleParams } from '@tresjs/core';
export interface RandomizedLightsProps {
    /** Number of lights, 8 */
    count?: number;
    /** Radius of the jiggle, higher values make softer light, 1 */
    radius?: number;
    /** Light intensity, Math.PI */
    intensity?: number;
    /** "Ambient occlusion" to directional light ratio, lower values mean less AO, 0.5 */
    ambient?: number;
    /** If the lights cast shadows, true */
    castShadow?: boolean;
    /** Default shadow bias, 0 */
    bias?: number;
    /** Size of the lights' shadow map, 512 */
    mapSize?: number;
    /** Size of the lights' shadow camera frustum, 10 */
    size?: number;
    /** Lights' shadow camera near value, 0.5 */
    near?: number;
    /** Lights' shadow camera far value, 500 */
    far?: number;
    /** Position, [5, 5, -10] */
    position?: VectorFlexibleParams;
}
declare const _default: import('vue').DefineComponent<RandomizedLightsProps, {
    instance: import('vue').ShallowRef<any, any>;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<RandomizedLightsProps> & Readonly<{}>, {
    position: VectorFlexibleParams;
    castShadow: boolean;
    count: number;
    intensity: number;
    bias: number;
    radius: number;
    mapSize: number;
    near: number;
    far: number;
    size: number;
    ambient: number;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {
    lightsRef: unknown;
}, any>;
export default _default;
