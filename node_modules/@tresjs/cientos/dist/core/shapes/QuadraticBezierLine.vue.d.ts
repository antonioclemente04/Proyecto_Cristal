import { Vector3 } from 'three';
interface QuadraticBezierLineProps {
    start: Vector3 | [number, number, number];
    end: Vector3 | [number, number, number];
    mid?: Vector3 | [number, number, number];
    segments?: number;
}
declare const _default: import('vue').DefineComponent<QuadraticBezierLineProps, {
    instance: import('vue').ShallowRef<any, any>;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<QuadraticBezierLineProps> & Readonly<{}>, {
    segments: number;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {
    lineRef: import('vue').CreateComponentPublicInstanceWithMixins<Readonly<import('./Line2.vue').LineProps> & Readonly<{}>, {
        instance: import('vue').ShallowRef<any, any>;
    }, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, import('vue').PublicProps, {
        color: import('@tresjs/core').TresColor;
        vertexColors: import('@tresjs/core').TresColor[] | null;
        alphaToCoverage: boolean;
        dashSize: number;
        gapSize: number;
        dashOffset: number;
        lineWidth: number;
        worldUnits: boolean;
        dashed: boolean;
        dashScale: number;
    }, false, {}, {}, import('vue').GlobalComponents, import('vue').GlobalDirectives, string, {}, any, import('vue').ComponentProvideOptions, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import('./Line2.vue').LineProps> & Readonly<{}>, {
        instance: import('vue').ShallowRef<any, any>;
    }, {}, {}, {}, {
        color: import('@tresjs/core').TresColor;
        vertexColors: import('@tresjs/core').TresColor[] | null;
        alphaToCoverage: boolean;
        dashSize: number;
        gapSize: number;
        dashOffset: number;
        lineWidth: number;
        worldUnits: boolean;
        dashed: boolean;
        dashScale: number;
    }> | null;
}, any>;
export default _default;
