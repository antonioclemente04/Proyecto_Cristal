import { BlendFunction, ToneMappingMode, ToneMappingEffect } from 'postprocessing';
export interface ToneMappingPmndrsProps {
    /**
     * The tone mapping mode.
     */
    mode?: ToneMappingMode;
    /**
     * The blend function.
     */
    blendFunction?: BlendFunction;
    /**
     * The resolution for luminance texture. The resolution of the luminance texture. Must be a power of two.
     */
    resolution?: number;
    /**
     * The average luminance. Only for `REINHARD2`.
     */
    averageLuminance?: number;
    /**
     * The middle grey factor. Only for `REINHARD2`.
     */
    middleGrey?: number;
    /**
     * The minimum luminance. Only for `REINHARD2`.
     */
    minLuminance?: number;
    /**
     * The white point. Only for `REINHARD2`.
     */
    whitePoint?: number;
}
declare const _default: import('vue').DefineComponent<ToneMappingPmndrsProps, {
    pass: import('vue').ShallowRef<import('postprocessing').EffectPass | null>;
    effect: import('vue').ShallowRef<ToneMappingEffect | null>;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<ToneMappingPmndrsProps> & Readonly<{}>, {}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
export default _default;
