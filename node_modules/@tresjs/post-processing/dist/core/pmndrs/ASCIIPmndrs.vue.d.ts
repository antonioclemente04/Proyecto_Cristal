import { BlendFunction, ASCIIEffect, ASCIITexture } from 'postprocessing';
import { Color } from 'three';
type ASCIITextureOptions = ConstructorParameters<typeof ASCIITexture>[0];
export interface ASCIIPmndrsProps {
    /**
     * The blend function.
     */
    blendFunction?: BlendFunction;
    /**
     * The opacity of the effect.
     */
    opacity?: number;
    /**
     * The cell size.
     */
    cellSize?: number;
    /**
     * Controls whether the effect should be inverted.
     */
    inverted?: boolean;
    /**
     * The color of the effect.
     */
    color?: Color | string | number | null;
    /**
     * Controls whether the effect should use the scene color.
     * If `true`, it overrides the `color` props.
     */
    useSceneColor?: boolean;
    /**
     * The ASCII texture options to use for creating an ASCIITexture instance.
     * https://pmndrs.github.io/postprocessing/public/docs/class/src/textures/ASCIITexture.js~ASCIITexture.html
     */
    asciiTexture?: ASCIITextureOptions;
}
declare const _default: import('vue').DefineComponent<ASCIIPmndrsProps, {
    pass: import('vue').ShallowRef<import('postprocessing').EffectPass | null>;
    effect: import('vue').ShallowRef<ASCIIEffect | null>;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<ASCIIPmndrsProps> & Readonly<{}>, {}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
export default _default;
